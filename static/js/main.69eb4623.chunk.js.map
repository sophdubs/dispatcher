{"version":3,"sources":["GlobalContext.js","helpers/downloadCSV.js","components/Nav.js","components/Task.js","components/DriverAvailability.js","helpers/helpers.js","components/Day.js","components/Week.js","components/New.js","components/Edit.js","components/Header.js","components/AvailabilityForm.js","components/AvailabilityDetails.js","App.js","index.js"],"names":["GlobalContext","createContext","dayStringToNum","headers","label","key","fetchData","numDays","schedule","data","date","getFirstDayOfCurrentYear","counter","row","generateRow","push","addDaysToDate","timeframe","pickup","dropoff","other","i","week","getWeekFromDate","day","getDay","Object","values","task","now","Date","getFullYear","oneJan","Math","ceil","newDate","setDate","getDate","Nav","useContext","state","setState","setDriver","driver","className","src","alt","onClick","href","id","role","data-toggle","aria-haspopup","aria-expanded","Task","props","duration","end_time","start_time","data-start","data-end","data-task","data-target","style","height","onClickCapture","e","onClickTask","location","parseTimeString","DriverAvailability","conflictingTasks","findConflictingTasks","tasks","taskListItems","generateTaskListItems","length","keys","type","deleteConflictingTasks","checkAvailabilityTask","newTask","selectedTimeSlot","addTaskToSchedule","wipeSelectedFields","$","modal","fetchDayTasksForDriver","time","selectedTask","deleteTask","getCurrentWeek","conflicts","startTime","parseInt","endTime","entries","listItems","includes","taskTime","validateForm","console","log","toString","Day","daySchedule","onClickTimeSlot","data-time","generateDaySchedule","target","dataset","taskElem","nodeName","parent","start","fetchSelectedTask","Week","weekDays","map","weekday","hourColumn","column","generateHourColumn","New","options","todayTasks","possibleEndTime","value","generateCompatibleEndTimeOptions","tabindex","aria-labelledby","aria-hidden","data-dismiss","aria-label","onSubmit","preventDefault","error","alert","createNewTask","for","selected","placeholder","name","Edit","availableTimeOptions","earlierTask","laterTask","generateAvailableTimeOptions","onChange","Header","document","querySelector","AvailabilityForm","weekOptions","generateWeekOptions","dayOptions","allTimeOptions","generateAllTimeOptions","slice","AvailabilityDetails","driverDetails","generateDriverDetails","App","useState","driver1","Monday","1","Tuesday","9","Wednesday","18","driver2","driver3","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"kPAEaA,EAAgBC,wBAAc,MCFrCC,EAAiB,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAEpFC,EAAU,CACd,CAACC,MAAO,aAAcC,IAAK,aAC3B,CAACD,MAAO,SAAUC,IAAI,UACtB,CAACD,MAAO,WAAYC,IAAI,WACxB,CAACD,MAAO,QAASC,IAAK,UAGlBC,EAAY,SAACC,EAASC,GAK1B,IAJA,IAAMC,EAAO,GAETC,EAAOC,IAEFC,EAAU,EAAGA,EAAU,IAAKA,GAAWL,EAAS,CACvD,IAAMM,EAAMC,EAAYF,EAASF,EAAMH,EAASC,GAEhDC,EAAKM,KAAKF,GAEVH,EAAOM,EAAcN,EAAMH,EAAU,GAEvC,OAAOE,GAGHK,EAAc,SAACF,EAASF,EAAMH,EAASC,GACvCD,EAAUK,GAAW,MACvBL,EAAU,IAAMK,GAWlB,IARA,IACMC,EAAM,CACVI,UAFa,cAAUL,EAAV,kBAA2BA,EAAUL,GAGlDW,OAAQ,EACRC,QAAS,EACTC,MAAO,GAGAC,EAAI,EAAGA,EAAId,EAASc,IAAK,CAChC,IAAMC,EAAOC,EAAgBb,GACvBc,EAAMtB,EAAeQ,EAAKe,UAEhC,GAAIjB,EAAS,OAAD,OAAQc,KACfd,EAAS,OAAD,OAAQc,IAAQE,GACzB,cAAmBE,OAAOC,OAAOnB,EAAS,OAAD,OAAQc,IAAQE,IAAzD,eAAgE,CAA3D,IAAMI,EAAI,KACK,iBAAdA,EAAKA,KACPf,EAAIK,QAAU,EACS,kBAAdU,EAAKA,KACdf,EAAIM,SAAW,EAEfN,EAAIO,OAAS,EAKrBV,EAAOM,EAAcN,EAAM,GAE7B,OAAOG,GAGHF,EAA2B,WAC/B,IAAMkB,EAAM,IAAIC,KAEhB,OADe,IAAIA,KAAKD,EAAIE,cAAe,EAAG,IAI1CR,EAAkB,SAACb,GACvB,IAAMsB,EAAS,IAAIF,KAAKpB,EAAKqB,cAAe,EAAG,GAC/C,OAAOE,KAAKC,OAAQxB,EAAOsB,GAAU,MAAYA,EAAOP,SAAS,GAAG,IAGhET,EAAgB,SAACN,EAAMH,GAC3B,IAAM4B,EAAUzB,EAAK0B,QAAQ1B,EAAK2B,UAAY9B,GAC9C,OAAO,IAAIuB,KAAKK,ICnEH,SAASG,IAAO,IAAD,EACAC,qBAAWvC,GAA/BwC,EADoB,EACpBA,MAAOC,EADa,EACbA,SAeTC,EAAY,SAACC,GACjBF,EAAS,2BAAID,GAAL,IAAYG,aAGtB,OACE,yBAAKC,UAAU,2BACb,yBAAKA,UAAU,2DACb,yBAAKA,UAAU,sBACb,yBAAKC,IAAI,kEAAkED,UAAU,oBAAoBE,IAAI,iBAE/G,yBAAKF,UAAU,kCACb,4BAAQG,QAjBM,WACpB,IAAMzB,EAAsB,IAAfkB,EAAMlB,KAAa,GAAKkB,EAAMlB,KAAO,EAClDmB,EAAS,2BAAID,GAAL,IAAYlB,YAed,UACA,sCAAYkB,EAAMlB,MAClB,4BAAQyB,QAzBM,WACpB,IAAMzB,EAAsB,KAAfkB,EAAMlB,KAAc,EAAIkB,EAAMlB,KAAO,EAClDmB,EAAS,2BAAID,GAAL,IAAYlB,YAuBd,WAEF,yBAAKsB,UAAU,gDACb,yBAAKA,UAAU,sBAEb,uBAAGI,KAAK,GAAGJ,UAAU,2BAA2BK,GAAG,iBAAiBC,KAAK,SAASC,cAAY,YAA9F,UACUX,EAAMG,QAEhB,wBAAIC,UAAU,iBACZ,wBAAIA,UAAU,gBAAgBG,QAAS,kBAAIL,EAAU,KAArD,YACA,wBAAIE,UAAU,gBAAgBG,QAAS,kBAAIL,EAAU,KAArD,YACA,wBAAIE,UAAU,gBAAgBG,QAAS,kBAAIL,EAAU,KAArD,cAGJ,yBAAKE,UAAU,wBAEX,uBAAGI,KAAK,IAAIJ,UAAU,2BAA2BK,GAAG,iBAAiBC,KAAK,SAASC,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SAA7I,YAGA,wBAAIT,UAAU,iBACZ,wBAAIA,UAAU,0BAAyB,kBAAC,UAAD,CAASzC,QAASA,EAASM,KAAMH,EAAU,EAAGkC,EAAMhC,SAAN,gBAAwBgC,EAAMG,WAA5E,WACvC,wBAAIC,UAAU,0BAAyB,kBAAC,UAAD,CAASzC,QAASA,EAASM,KAAMH,EAAU,EAAGkC,EAAMhC,SAAN,gBAAwBgC,EAAMG,WAA5E,WACvC,wBAAIC,UAAU,0BAAyB,kBAAC,UAAD,CAASzC,QAASA,EAASM,KAAMH,EAAU,EAAGkC,EAAMhC,SAAN,gBAAwBgC,EAAMG,WAA5E,WACvC,wBAAIC,UAAU,0BAAyB,kBAAC,UAAD,CAASzC,QAASA,EAASM,KAAMH,EAAU,GAAIkC,EAAMhC,SAAN,gBAAwBgC,EAAMG,WAA7E,YACvC,wBAAIC,UAAU,0BAAyB,kBAAC,UAAD,CAASzC,QAASA,EAASM,KAAMH,EAAU,GAAIkC,EAAMhC,SAAN,gBAAwBgC,EAAMG,WAA7E,iB,YCvDxC,SAASW,EAAKC,GAE3B,IAAMC,EAAWD,EAAME,SAAWF,EAAMG,WACxC,OACE,wBAAId,UAAS,eAAUW,EAAM3B,KAAK,GAArB,QAA+B+B,aAAYJ,EAAMG,WAAYE,WAAUL,EAAME,SAAUI,YAAWN,EAAM3B,KAAMuB,cAAY,QAAQW,cAAY,gBAAgBC,MAAO,CAACC,OAAO,GAAD,OAAgB,EAAXR,EAAL,OAAwBS,eAAgB,SAACC,GAAD,OAAOX,EAAMY,YAAYD,KACxP,6BACE,4BAAKX,EAAM3B,MACX,2BAAI2B,EAAMa,UACV,qCAAOC,EAAgBd,EAAMG,YAA7B,YAA4CW,EAAgBd,EAAME,c,oBCN3D,SAASa,EAAmBf,GAAQ,IAAD,EACpBhB,qBAAWvC,GAA/BwC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,SAGT8B,EAAmBC,EAAqBhC,EAAOe,EAAMkB,OAErDC,EAAgBC,EAAsBpB,EAAMkB,MAAOF,GA6BzD,OACE,wBAAI3B,UAAU,kBACZ,6BACE,4CAAcW,EAAMZ,SACU,IAA5B4B,EAAiBK,OACjB,wBAAIhC,UAAU,sBAAd,gBAEA,wBAAIA,UAAU,mBAAmB2B,EAAiBK,OAAlD,gBAEF,sCAAQlD,OAAOmD,KAAKtB,EAAMkB,OAAOG,OAAjC,sBAGF,wBAAIhC,UAAU,oBACX8B,GAGH,6BACIH,EAAiBK,OAAS,GAC1B,uBAAGhC,UAAU,WAAb,0DAEF,4BAAQkC,KAAK,SAAS/B,QA/CN,SAACmB,GAEW,IAA5BK,EAAiBK,QACnBG,EAAuBtC,EAAUc,EAAMZ,OAAQH,EAAMwC,sBAAsB1D,KAAMkB,EAAMwC,sBAAsBxD,IAAK+C,GAGpH,IAAMU,EAAU,CACdvB,WAAYlB,EAAMwC,sBAAsBtB,WACxCD,SAAUjB,EAAMwC,sBAAsBvB,SACtC7B,KAAMY,EAAMwC,sBAAsBpD,KAClCwC,SAAU5B,EAAMwC,sBAAsBZ,UAGlCzB,EAASY,EAAMZ,OACfrB,EAAOkB,EAAMwC,sBAAsB1D,KACnCE,EAAMgB,EAAMwC,sBAAsBxD,IAClC0D,EAAmB1C,EAAMwC,sBAAsBtB,WACrDjB,EAAS,2BAAID,GAAL,IAAYG,SAAQrB,OAAME,MAAK0D,sBAEvCC,EAAkBF,EAASzC,EAAOC,GAClC2C,EAAmB5C,EAAOC,GAE1BA,EAAS,2BAAID,GAAL,IAAYG,OAAQY,EAAMZ,OAAQqC,sBAAuB,KAAM1D,UAEvE+D,IAAE,wBAAwBC,MAAM,SAuBiB1C,UAAU,iCAAvD,0BAA2GW,EAAMZ,WCxDzH,IAuBM4C,EAAyB,SAAC/E,EAAUc,EAAME,EAAKmB,GAOnD,OALInC,EAAS,SAAD,OAAUmC,IAAlB,cAAmCrB,KAC7Bd,EAAS,SAAD,OAAUmC,IAAlB,cAAmCrB,IAAQE,IAE3C,IAKN6C,EAAkB,SAAAmB,GACtB,OAAa,KAATA,EAAoB,OACX,IAATA,GAAcA,EAAO,KAAO,EAAU,OACnCA,EAAO,GAAP,UAAeA,EAAO,GAAtB,gBAAkCA,EAAlC,OA4DHL,EAAoB,SAACF,EAASzC,EAAOC,GACzCA,GAAS,SAAAD,GAgBP,OAfIA,EAAMhC,SAAN,gBAAwBgC,EAAMG,SAA9B,cAA+CH,EAAMlB,OACpDkB,EAAMhC,SAAN,gBAAwBgC,EAAMG,SAA9B,cAA+CH,EAAMlB,OAArD,UAAgEkB,EAAMhB,MACvEgB,EAAMhC,SAAN,gBAAwBgC,EAAMG,SAA9B,cAA+CH,EAAMlB,OAArD,UAAgEkB,EAAMhB,MAAtE,UAAgFyD,EAAQvB,aAAgBuB,EAExGzC,EAAMhC,SAAN,gBAAwBgC,EAAMG,SAA9B,cAA+CH,EAAMlB,OAArD,UAAgEkB,EAAMhB,MAAtE,yBACMyD,EAAQvB,YAAeuB,GAI/BzC,EAAMhC,SAAN,gBAAwBgC,EAAMG,SAA9B,cAA+CH,EAAMlB,OAArD,yBACMkB,EAAMhB,KADZ,yBAEQyD,EAAQvB,YAAeuB,IAI1BzC,MAcL4C,EAAqB,SAAC5C,EAAOC,GAIjCA,EAAS,2BAAID,GAAL,IAAYhB,IAHR,KAGa0D,iBAFA,KAEkBO,aADtB,SASjBC,EAAa,SAAClD,EAAOC,GACzBA,GAAS,SAAAD,GAEP,cADOA,EAAMhC,SAAN,gBAAwBgC,EAAMG,SAA9B,cAA+CH,EAAMlB,OAArD,UAAgEkB,EAAMhB,MAAOgB,EAAM0C,kBACnF1C,MAILmD,EAAiB,WACrB,IAAM9D,EAAM,IAAIC,KACVE,EAAS,IAAIF,KAAKD,EAAIE,cAAe,EAAG,GAC9C,OAAOE,KAAKC,OAAQL,EAAMG,GAAU,MAAYA,EAAOP,SAAS,GAAG,IAgC/D+C,EAAuB,SAAChC,EAAOiC,GACnC,IAAMmB,EAAY,GAClB,GAAGpD,EAAMwC,sBAGP,IAFA,IAAMa,EAAYC,SAAStD,EAAMwC,sBAAsBtB,YACjDqC,EAAUD,SAAStD,EAAMwC,sBAAsBvB,UACrD,MAA2B/B,OAAOsE,QAAQvB,GAA1C,eAAkD,CAAC,IAAD,sBAAtCe,EAAsC,KAAhC5D,EAAgC,MAC3CiE,IAAcjE,EAAK8B,YAAgBmC,EAAYjE,EAAK8B,YAAcqC,EAAUnE,EAAK8B,YAAgBmC,EAAYjE,EAAK8B,YAAcmC,EAAYjE,EAAK6B,WACpJmC,EAAU7E,KAAKyE,GAIrB,OAAOI,GAGHjB,EAAwB,SAACF,EAAOF,GAEpC,IADA,IAAM0B,EAAY,GAClB,MAAmBvE,OAAOC,OAAO8C,GAAjC,eAAyC,CAApC,IAAM7C,EAAI,KACbqE,EAAUlF,KAAK,wBAAI6B,UAAW2B,EAAiB2B,SAAjB,UAA6BtE,EAAK8B,aAAgB,wBAA0B,gBACxG,4BAAK9B,EAAKA,MACV,2BAAIA,EAAKwC,UACT,qCAAOC,EAAgBzC,EAAK8B,YAA5B,YAA2CW,EAAgBzC,EAAK6B,cAGpE,OAAOwC,GAGHlB,EAAyB,SAACtC,EAAUE,EAAQrB,EAAME,EAAK+C,GAC3D9B,GAAS,SAAAD,GAAU,IAAD,gBACO+B,GADP,IAChB,2BAAyC,CAAC,IAA/B4B,EAA8B,eAChC3D,EAAMhC,SAAN,gBAAwBmC,IAAxB,cAAyCrB,IAAzC,UAAoDE,IAAO2E,IAFpD,8BAIhB,OAAO3D,MAIL4D,EAAe,SAACP,EAAWE,EAAS3B,GAExC,OADAiC,QAAQC,IAAI,CAACT,YAAWE,UAAS3B,aAC3ByB,EAAUU,UAAcR,EAAQQ,UAAcnC,EAGhD0B,SAASC,IAAYD,SAASD,GACzB,yCADT,EAFS,kCCzNI,SAASW,EAAIjD,GAAQ,IAAD,EACLhB,qBAAWvC,GAA/BwC,EADyB,EACzBA,MAAOC,EADkB,EAClBA,SA0BTgE,EDrBoB,SAAChC,EAAOiC,EAAiBvC,GAEnD,IADA,IAAM3D,EAAW,GACRa,EAAI,EAAGA,EAAI,GAAIA,IACtB,GAAIoD,EAAMpD,GAAI,CAAC,IAAD,EACmCoD,EAAMpD,GAA9CqC,EADK,EACLA,WAAYD,EADP,EACOA,SAAU7B,EADjB,EACiBA,KAAMwC,EADvB,EACuBA,SACnC5D,EAASO,KAAK,kBAACuC,EAAD,CAAMa,YAAaA,EAAaT,WAAYA,EAAYD,SAAUA,EAAU7B,KAAMA,EAAMwC,SAAUA,KAChH/C,GAAKoC,EAAWC,EAAa,OAE7BlD,EAASO,KAAK,wBAAIV,IAAKgB,EAAGuB,UAAU,YAAY+D,YAAWtF,EAAG8B,cAAY,QAAQW,cAAY,eAAef,QAAS2D,GAAxG,MAIlB,OADAlG,EAASO,KAAK,wBAAIV,IAAK,GAAIuC,UAAU,mBAAmB+D,YAAW,IAArD,MACPnG,ECSaoG,CAFNrB,EAAuB/C,EAAMhC,SAAUgC,EAAMlB,KAAMiC,EAAM/B,IAAKgB,EAAMG,SAtB1D,SAACuB,GAEvB,IAAMgB,EAAmBY,SAAS5B,EAAE2C,OAAOC,QAAQtB,MAEnD/C,EAAS,2BAAID,GAAL,IAAYhB,IAAK+B,EAAM/B,IAAK0D,yBAGlB,SAAChB,GAGnB,IAFA,IAAI6C,EAAW7C,EAAE2C,OAEW,OAAtBE,EAASC,UACbD,EAAW1B,IAAE0B,GAAUE,SAAS,GAGlC,IAAM/B,EAAmB6B,EAASD,QAAQI,MACpC1F,EAAM+B,EAAM/B,IAEZiE,EDgHgB,SAACjE,EAAKF,EAAMqB,EAAQuC,EAAkB1C,GAE9D,OADaA,EAAMhC,SAAN,gBAAwBmC,IAAxB,cAAyCrB,IAAQE,GAAK0D,GCjH5CiC,CAAkB3F,EAAKgB,EAAMlB,KAAMkB,EAAMG,OAAQuC,EAAkB1C,GACxFC,EAAS,2BAAID,GAAL,IAAY0C,mBAAkB1D,MAAKiE,qBAQ7C,OACE,oCACA,wBAAI7C,UAAU,oBACZ,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,YAAYW,EAAM/B,KAC9BiF,KCpCK,SAASW,EAAK7D,GAE3B,IAAM8D,EAAW,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAAYC,KAAI,SAAAC,GAAO,OAAI,kBAACf,EAAD,CAAKhF,IAAK+F,OACnHC,EFHmB,WAEzB,IADA,IAAMC,EAAS,GACNpG,EAAI,EAAGA,GAAK,GAAIA,IACzBoG,EAAO1G,KAAK,wBAAIV,IAAKgB,EAAGuB,UAAU,cAAa,2BAAIyB,EAAgBhD,MAEnE,OAAOoG,EEFYC,GACnB,OACE,yBAAK9E,UAAU,QACb,wBAAIA,UAAU,eACZ,wBAAIA,UAAU,oBACZ,wBAAIA,UAAU,eACX4E,IAGJH,ICXM,SAASM,IAAO,IAAD,EACApF,qBAAWvC,GAA/BwC,EADoB,EACpBA,MAAOC,EADa,EACbA,SAyBTmF,EHYgC,SAACpF,GAKvC,IAJA,IAAMqF,EAAatC,EAAuB/C,EAAMhC,SAAUgC,EAAMlB,KAAMkB,EAAMhB,IAAKgB,EAAMG,QACjFiF,EAAU,GACZE,EAAkBtF,EAAMiD,aAAeK,SAAStD,EAAMiD,aAAahC,UAAYqC,SAAStD,EAAM0C,kBAE3F4C,EAAkB,KAAOD,EAAWC,IACzCF,EAAQ7G,KAAK,4BAAQgH,MAAOD,EAAkB,GAAIzD,EAAgByD,EAAkB,KACpFA,IAEF,OAAOF,EGrBSI,CAAiCxF,GAEjD,OACE,yBAAKI,UAAU,aAAaK,GAAG,cAAcgF,SAAS,KAAK/E,KAAK,SAASgF,kBAAgB,wBAAwBC,cAAY,QAC3H,yBAAKvF,UAAU,eAAeM,KAAK,YACjC,yBAAKN,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAd,YACA,4BAAQkC,KAAK,SAASlC,UAAU,QAAQwF,eAAa,QAAQC,aAAW,SACtE,0BAAMF,cAAY,QAAlB,UAGJ,yBAAKvF,UAAU,cACb,0BAAMA,UAAU,gBAAgB0F,SApCrB,SAACpE,GAEpBA,EAAEqE,iBAEF,IAAMxC,EAAU7B,EAAE2C,OAAO,YAAYkB,MAC/BnG,EAAOsC,EAAE2C,OAAOjF,KAAKmG,MACrB3D,EAAWF,EAAE2C,OAAOzC,SAAS2D,MAE7BS,EAAQpC,EAAa5D,EAAM0C,iBAAkBa,EAAS3B,GAC5D,GAAIoE,EACFC,MAAMD,OADR,CAKA,IAAMvD,EHmGY,SAACc,EAASnE,EAAMY,EAAO4B,GAO3C,MANgB,CACdV,WAAYlB,EAAM0C,iBAClBzB,SAAUqC,SAASC,GACnBnE,OACAwC,YGxGgBsE,CAAc3C,EAASnE,EAAMY,EAAO4B,GAEpDe,EAAkBF,EAASzC,EAAOC,GAClC2C,EAAmB5C,EAAOC,GAE1B4C,IAAE,gBAAgBC,MAAM,WAkBZ,yBAAK1C,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBK,GAAG,UAAtC,WAEF,2BAAO6B,KAAK,OAAOlC,UAAU,eAAgBmF,MAAOvF,EAAMG,UAE5D,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBK,GAAG,QAAtC,SAEF,2BAAO6B,KAAK,OAAOlC,UAAU,eAAemF,MAAOvF,EAAMlB,QAE3D,yBAAKsB,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBK,GAAG,OAAtC,QAEF,2BAAO6B,KAAK,OAAOlC,UAAU,eAAemF,MAAOvF,EAAMhB,OAE3D,yBAAKoB,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBK,GAAG,cAAtC,eAEF,2BAAO6B,KAAK,OAAOlC,UAAU,eAAemF,MAAO1D,EAAgB7B,EAAM0C,qBAG3E,yBAAKtC,UAAU,oBACb,yBAAKA,UAAU,uBACb,2BAAOA,UAAU,mBAAmB+F,IAAI,YAAxC,aAEF,4BAAQ/F,UAAU,6BAA6BK,GAAG,YAC/C2E,IAGL,yBAAKhF,UAAU,oBACb,yBAAKA,UAAU,uBACb,2BAAOA,UAAU,mBAAmB+F,IAAI,QAAxC,SAEF,4BAAQ/F,UAAU,6BAA6BK,GAAG,QAChD,4BAAQ2F,UAAQ,GAAhB,gBACA,iDACA,2CAGJ,yBAAKhG,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBK,GAAG,YAAtC,aAEF,2BAAO6B,KAAK,OAAOlC,UAAU,eAAeiG,YAAY,aAAaC,KAAK,cAE5E,yBAAKlG,UAAU,eACb,4BAAQkC,KAAK,SAASlC,UAAU,oBAAoBwF,eAAa,SAAjE,UACA,4BAAQtD,KAAK,SAASlC,UAAU,qBAAhC,cC3FH,SAASmG,IAAQ,IAAD,EACDxG,qBAAWvC,GAA/BwC,EADqB,EACrBA,MAAOC,EADc,EACdA,SAwDTuG,EJW6B,SAACxG,GAKpC,IAJA,IAAMoF,EAAU,GACVC,EAAatC,EAAuB/C,EAAMhC,SAAUgC,EAAMlB,KAAMkB,EAAMhB,IAAKgB,EAAMG,QAEnFsG,EAAc,EACT5H,EAAImB,EAAM0C,iBAAmB,EAAG7D,GAAK,EAAGA,IAC/C,GAAIwG,EAAWxG,GAAI,CACjB4H,EAAcpB,EAAWxG,GAAGoC,SAC5B,MAKJ,IADA,IAAIyF,EAAY,GACP7H,EAAIyE,SAAStD,EAAM0C,kBAAoB,EAAG7D,EAAI,GAAIA,IACzD,GAAIwG,EAAWxG,GAAI,CACjB6H,EAAY7H,EACZ,MAIJ,KAAO4H,GAAeC,GACpBtB,EAAQ7G,KAAK,4BAAQgH,MAAOkB,GAAc5E,EAAgB4E,KAC1DA,IAEF,OAAOrB,EInCsBuB,CAA6B3G,GAE1D,OACE,yBAAKI,UAAU,aAAaK,GAAG,eAAegF,SAAS,KAAK/E,KAAK,SAASgF,kBAAgB,wBAAwBC,cAAY,QAC5H,yBAAKvF,UAAU,eAAeM,KAAK,YACjC,yBAAKN,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAd,aACA,4BAAQkC,KAAK,SAASlC,UAAU,QAAQwF,eAAa,QAAQC,aAAW,SACtE,0BAAMF,cAAY,QAAlB,UAGJ,yBAAKvF,UAAU,cACb,0BAAMA,UAAU,iBAAiB0F,SAnEtB,SAACpE,GAEpBA,EAAEqE,iBAEF,IAAMxC,EAAU7B,EAAE2C,OAAO,YAAYkB,MAC/BlC,EAAY3B,EAAE2C,OAAO,cAAckB,MACnCnG,EAAOsC,EAAE2C,OAAOjF,KAAKmG,MAErBS,EAAQpC,EAAaP,EAAWE,EAASvD,EAAMiD,aAAarB,UAClE,GAAIoE,EACFC,MAAMD,OADR,CAKA9C,EAAWlD,EAAOC,GAElB,IAAMwC,EAAO,2BACRzC,EAAMiD,cADE,IAEXhC,SAAUsC,EACVrC,WAAYmC,EACZjE,SAGFa,EAAS,2BAAID,GAAL,IAAYgD,KAAMK,KAE1BV,EAAkBF,EAASzC,EAAOC,GAElC2C,EAAmB5C,EAAOC,GAE1B4C,IAAE,iBAAiBC,MAAM,WAuCb,yBAAK1C,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBK,GAAG,UAAtC,WAEF,2BAAO6B,KAAK,OAAOlC,UAAU,eAAgBmF,MAAOvF,EAAMG,UAE5D,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBK,GAAG,QAAtC,SAEF,2BAAO6B,KAAK,OAAOlC,UAAU,eAAemF,MAAOvF,EAAMlB,QAE3D,yBAAKsB,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBK,GAAG,OAAtC,QAEF,2BAAO6B,KAAK,OAAOlC,UAAU,eAAemF,MAAOvF,EAAMhB,OAG3D,yBAAKoB,UAAU,oBACb,yBAAKA,UAAU,uBACb,2BAAOA,UAAU,mBAAmB+F,IAAI,cAAxC,eAEF,4BAAQ/F,UAAU,6BAA6BK,GAAG,cAC/C+F,IAIL,yBAAKpG,UAAU,oBACb,yBAAKA,UAAU,uBACb,2BAAOA,UAAU,mBAAmB+F,IAAI,YAAxC,aAEF,4BAAQ/F,UAAU,6BAA6BK,GAAG,YAC/C+F,IAGL,yBAAKpG,UAAU,oBACb,yBAAKA,UAAU,uBACb,2BAAOA,UAAU,mBAAmB+F,IAAI,QAAxC,SAEF,4BAAQ/F,UAAU,6BAA6BK,GAAG,QAChD,4BAAQ2F,UAAQ,GAAhB,gBACA,iDACA,2CAGJ,yBAAKhG,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBK,GAAG,YAAtC,aAEF,2BAAO6B,KAAK,OAAOlC,UAAU,8BAA8BiG,YAAY,aAAaC,KAAK,WAAWM,SA1E3F,SAAClF,GAExB,IAAMuB,EAAY,2BACbjD,EAAMiD,cADO,IAEhBrB,SAAUF,EAAE2C,OAAOkB,QAErBtF,EAAS,2BAAID,GAAL,IAAYiD,mBAoE0HsC,MAAOvF,EAAMiD,aAAejD,EAAMiD,aAAarB,SAAW,MAE5L,yBAAKxB,UAAU,gBACb,4BAAQkC,KAAK,SAASlC,UAAU,iBAAiBG,QAzFhD,SAACmB,GAEhBwB,EAAWlD,EAAOC,GAKlBA,EAAS,2BAAID,GAAL,IAAYhB,IAHR,KAGa0D,iBAFA,KAEkBO,aADtB,QAGrBJ,IAAE,iBAAiBC,MAAM,UAgFX,eACA,4BAAQR,KAAK,SAASlC,UAAU,qBAAhC,sBC7HH,SAASyG,IAAU,IAAD,EACH9G,qBAAWvC,GAA/BwC,EADuB,EACvBA,MAAOC,EADgB,EAChBA,SAsBf,OACE,gCACE,wBAAIG,UAAU,UACZ,wBAAIG,QAba,SAACmB,GACtB,IAAM5C,EAAOqE,IACblD,EAAS,2BAAID,GAAL,IAAYlB,YAWa,qCAA7B,gBACA,wBAAIyB,QARkB,SAACmB,GAC3BmB,IAAE,qBAAqBC,MAAM,UAOzB,sBACA,wBAAIvC,QAxBU,SAACmB,GACnB,IAAM5C,EAAOwE,SAASwD,SAASC,cAAc,eAAexB,OACxDzG,GAAQA,GAAQ,GAAKA,GAAQ,IAC/BmB,EAAS,2BAAID,GAAL,IAAYlB,UAEtBgI,SAASC,cAAc,eAAexB,MAAM,KAmBxC,gBAA2C,2BAAOnF,UAAU,aAAakC,KAAK,SAA9E,QC5BO,SAAS0E,IAAoB,IAAD,EACbjH,qBAAWvC,GAA/BwC,EADiC,EACjCA,MAAOC,EAD0B,EAC1BA,SAGTgH,ENmJoB,WAG1B,IAFA,IAAI7B,EAAU,GACVvG,EAAIsE,IACAtE,GAAK,GAAIA,IACjBuG,EAAQ7G,KAAK,4BAAQgH,MAAO1G,GAAIA,IAEhC,OAAOuG,EMzJa8B,GACdC,EN4JC,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAAYrC,KAAI,SAAA9F,GAAG,OAAI,4BAAQuG,MAAOvG,GAAMA,MM3JhHoI,EN8JuB,WAE7B,IADA,IAAMhC,EAAU,GACPvG,EAAI,EAAGA,GAAK,GAAIA,IACvBuG,EAAQ7G,KAAK,4BAAQgH,MAAO1G,GAAIgD,EAAgBhD,KAElD,OAAOuG,EMnKgBiC,GAqCvB,OACE,yBAAKjH,UAAU,aAAaK,GAAG,mBAAmBgF,SAAS,MACzD,yBAAKrF,UAAU,eAAeM,KAAK,YACjC,yBAAKN,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAd,sBACA,4BAAQkC,KAAK,SAASlC,UAAU,QAAQwF,eAAa,QAAQC,aAAW,SACtE,0BAAMF,cAAY,QAAlB,UAGJ,yBAAKvF,UAAU,cACb,0BAAMA,UAAU,yBAAyB0F,SA9CvB,SAACpE,GAE3BA,EAAEqE,iBAEF,IAAMjH,EAAO4C,EAAE2C,OAAF,KAAiBkB,MACxBvG,EAAM0C,EAAE2C,OAAF,IAAgBkB,MACtBlC,EAAY3B,EAAE2C,OAAO,cAAckB,MACnChC,EAAU7B,EAAE2C,OAAO,YAAYkB,MAC/BnG,EAAOsC,EAAE2C,OAAF,KAAiBkB,MACxB3D,EAAWF,EAAE2C,OAAF,SAAqBkB,MAGhCS,EAAQpC,EAAaP,EAAWE,EAAS3B,GAC/C,GAAIoE,EACFC,MAAMD,OADR,CAMA,IAAMxD,EAAwB,CAC5B1D,OACAE,MACAkC,WAAYmC,EACZpC,SAAUsC,EACVnE,OACAwC,YAEF3B,EAAS,2BAAID,GAAL,IAAYwC,2BAGpBK,IAAE,qBAAqBC,MAAM,QAE7BD,IAAE,wBAAwBC,MAAM,WAgBpB,yBAAK1C,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBK,GAAG,QAAtC,SAEF,4BAAQL,UAAU,6BAA6BK,GAAG,QAC/CwG,IAIL,yBAAK7G,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBK,GAAG,OAAtC,QAEF,4BAAQL,UAAU,6BAA6BK,GAAG,OAC/C0G,IAIL,yBAAK/G,UAAU,oBACb,yBAAKA,UAAU,uBACb,2BAAOA,UAAU,mBAAmB+F,IAAI,cAAxC,eAEF,4BAAQ/F,UAAU,6BAA6BK,GAAG,cAC/C2G,IAIL,yBAAKhH,UAAU,oBACb,yBAAKA,UAAU,uBACb,2BAAOA,UAAU,mBAAmB+F,IAAI,YAAxC,aAEF,4BAAQ/F,UAAU,6BAA6BK,GAAG,YAC/C2G,EAAeE,MAAM,KAK1B,yBAAKlH,UAAU,oBACb,yBAAKA,UAAU,uBACb,2BAAOA,UAAU,mBAAmB+F,IAAI,QAAxC,SAEF,4BAAQ/F,UAAU,6BAA6BK,GAAG,QAChD,4BAAQ2F,UAAQ,GAAhB,gBACA,iDACA,2CAKJ,yBAAKhG,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBK,GAAG,YAAtC,aAEF,2BAAO6B,KAAK,OAAOlC,UAAU,8BAA8BiG,YAAY,aAAaC,KAAK,cAG3F,yBAAKlG,UAAU,wBACb,4BAAQkC,KAAK,SAASlC,UAAU,oBAAoBwF,eAAa,SAAjE,UACA,4BAAQtD,KAAK,SAASlC,UAAU,qBAAhC,4BCnHH,SAASmH,IAAuB,IACrCvH,EAAUD,qBAAWvC,GAArBwC,MAEFwH,EAAgB,CAAC,EAAG,EAAG,GAAG1C,KAAI,SAAA3E,GAAM,OP0Kd,SAACH,EAAOG,GACpC,IAAI8B,EAAQ,GAIZ,OAHIjC,EAAMwC,wBACRP,EAAQc,EAAuB/C,EAAMhC,SAAUgC,EAAMwC,sBAAsB1D,KAAMkB,EAAMwC,sBAAsBxD,IAAKmB,IAE7G,kBAAC2B,EAAD,CAAoB3B,OAAQA,EAAQ8B,MAAOA,IO/KJwF,CAAsBzH,EAAOG,MAE3E,OACE,yBAAKC,UAAU,aAAaK,GAAG,sBAAsBgF,SAAS,MAC5D,yBAAKrF,UAAU,wBAAwBM,KAAK,YAC1C,yBAAKN,UAAU,oCACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAd,wBACA,4BAAQkC,KAAK,SAASlC,UAAU,QAAQwF,eAAa,QAAQC,aAAW,SACtE,0BAAMF,cAAY,QAAlB,UAGJ,yBAAKvF,UAAU,cACb,wBAAIA,UAAU,qBACXoH,OCiDAE,MA1Df,WACE,IAAM5I,EAAOqE,IADA,EAEawE,mBAAS,CACjC3I,IAAK,KACLmB,OAAQ,EACRuC,iBAAkB,KAClBO,aAAc,KACdT,sBAAuB,KACvB1D,KAAMA,EACNd,SAAU,CACR4J,QAAQ,6BACE9I,GAAS,CACf+I,OAAQ,CACNC,EAAG,CACD5G,WAAY,EACZD,SAAU,EACV7B,KAAM,eACNwC,SAAU,YAGdmG,QAAS,CACPC,EAAG,CACD9G,WAAY,EACZD,SAAU,GACV7B,KAAM,gBACNwC,SAAU,WAGdqG,UAAW,CACTC,GAAI,CACFhH,WAAY,GACZD,SAAU,GACV7B,KAAM,QACNwC,SAAU,eAKlBuG,QAAS,GACTC,QAAS,MAvCA,mBAENpI,EAFM,KAECC,EAFD,KA2Cb,OACE,yBAAKG,UAAU,OACb,kBAAC5C,EAAc6K,SAAf,CAAwB9C,MAAO,CAACvF,QAAOC,aACrC,kBAACH,EAAD,MACA,kBAAC+G,EAAD,MACA,kBAACjC,EAAD,MACA,kBAACO,EAAD,MACA,kBAACoB,EAAD,MACA,kBAACS,EAAD,MACA,kBAACO,EAAD,S,MCzDRe,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1B,SAAS2B,eAAe,W","file":"static/js/main.69eb4623.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const GlobalContext = createContext(null);","const dayStringToNum = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n\nconst headers = [\n  {label: \"Time-Frame\", key: \"timeframe\"},\n  {label: \"Pickup\", key:\"pickup\"},\n  {label: \"Drop-off\", key:\"dropoff\"},\n  {label: \"Other\", key: \"other\"}\n];\n\nconst fetchData = (numDays, schedule) => {\n  const data = [];\n\n  let date = getFirstDayOfCurrentYear();\n  \n  for (let counter = 1; counter < 365; counter += numDays) {\n    const row = generateRow(counter, date, numDays, schedule);\n\n    data.push(row);\n    // Adjust date\n    date = addDaysToDate(date, numDays - 1);\n  }\n  return data;\n}\n\nconst generateRow = (counter, date, numDays, schedule) => {\n  if (numDays + counter >= 365) {\n    numDays = 365 - counter;\n  }\n \n  const timeframe = `Day ${counter} - Day ${counter + numDays}`;\n  const row = {\n    timeframe, \n    pickup: 0,\n    dropoff: 0,\n    other: 0\n  }\n\n  for (let i = 0; i < numDays; i++) {\n    const week = getWeekFromDate(date);\n    const day = dayStringToNum[date.getDay()];\n\n    if (schedule[`Week${week}`]) {\n      if(schedule[`Week${week}`][day]) {\n        for (const task of Object.values(schedule[`Week${week}`][day])) {\n          if (task.task === \"Pickup Goods\") {\n            row.pickup += 1;\n          } else if (task.task === \"Deliver Goods\") {\n            row.dropoff += 1;\n          } else {\n            row.other += 1;\n          }\n        }\n      }\n    }\n    date = addDaysToDate(date, 1);\n  }\n  return row;\n}\n\nconst getFirstDayOfCurrentYear = () => {\n  const now = new Date();\n  const oneJan = new Date(now.getFullYear(), 0, 1);\n  return oneJan;\n};\n\nconst getWeekFromDate = (date) => {\n  const oneJan = new Date(date.getFullYear(), 0, 1);\n  return Math.ceil((((date - oneJan) / 86400000) + oneJan.getDay()+1)/7);\n}\n\nconst addDaysToDate = (date, numDays) => {\n  const newDate = date.setDate(date.getDate() + numDays);\n  return new Date(newDate);\n}\n\nexport { fetchData, headers };","import React, { useContext } from \"react\";\nimport { CSVLink } from \"react-csv\";\nimport { GlobalContext } from \"../GlobalContext\";\nimport { fetchData, headers } from \"../helpers/downloadCSV\";\n\nexport default function Nav() {\n  const { state, setState } = useContext(GlobalContext);\n\n  // Increment week in state on right arrow click\n  const incrementWeek = () => {\n    const week = state.week === 52 ? 1 : state.week + 1;\n    setState({...state, week})\n  }\n\n  // Decrement week in state on right arrow click\n  const decrementWeek = () => {\n    const week = state.week === 1 ? 52 : state.week - 1;\n    setState({...state, week});\n  }\n\n  // Set driver in state to delected driver from drop down\n  const setDriver = (driver) => {\n    setState({...state, driver});\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand-lg\">\n      <div className=\"collapse navbar-collapse d-flex justify-content-between\">\n        <div className=\"nav-item one-third\">\n          <img src=\"https://www.roserocket.com/static/media/logo-white.1576a2ec.svg\" className=\"navbar-brand logo\" alt=\"rose-rocket\"/>\n        </div>\n        <div className=\"nav-item week-select one-third\">\n          <button onClick={decrementWeek}>&#x25C0;</button>\n          <span>Week {state.week}</span>\n          <button onClick={incrementWeek}>&#x25B6;</button>\n        </div>\n        <div className=\"nav-item d-flex flex-row one-third dropdowns\">\n          <div className=\"dropdown driver-dd\">\n            {/* eslint-disable-next-line */}\n            <a href=\"\" className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\">\n              Driver {state.driver}\n            </a>\n            <ul className=\"dropdown-menu\">\n              <li className=\"dropdown-item\" onClick={()=>setDriver(1)}>Driver 1</li>\n              <li className=\"dropdown-item\" onClick={()=>setDriver(2)}>Driver 2</li>\n              <li className=\"dropdown-item\" onClick={()=>setDriver(3)}>Driver 3</li>\n            </ul>\n          </div>\n          <div className=\"dropdown download-dd\">\n              {/* eslint-disable-next-line */}\n              <a href=\"#\" className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Download\n              </a>\n              <ul className=\"dropdown-menu\">\n                <li className=\"dropdown-item csv-link\"><CSVLink headers={headers} data={fetchData(2, state.schedule[`driver${state.driver}`])}>2 days</CSVLink></li>\n                <li className=\"dropdown-item csv-link\"><CSVLink headers={headers} data={fetchData(4, state.schedule[`driver${state.driver}`])}>4 days</CSVLink></li>\n                <li className=\"dropdown-item csv-link\"><CSVLink headers={headers} data={fetchData(7, state.schedule[`driver${state.driver}`])}>7 days</CSVLink></li>\n                <li className=\"dropdown-item csv-link\"><CSVLink headers={headers} data={fetchData(14, state.schedule[`driver${state.driver}`])}>14 days</CSVLink></li>\n                <li className=\"dropdown-item csv-link\"><CSVLink headers={headers} data={fetchData(28, state.schedule[`driver${state.driver}`])}>28 days</CSVLink></li>           \n              </ul>\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n}","import React from 'react';\nimport { parseTimeString } from \"../helpers/helpers\";\n\nexport default function Task(props) {\n  // Extract task duration in order to dynamically set a tasks height property\n  const duration = props.end_time - props.start_time;\n  return (\n    <li className={`task ${props.task[0]}task`} data-start={props.start_time} data-end={props.end_time} data-task={props.task} data-toggle=\"modal\" data-target=\"#editTaskForm\" style={{height: `${duration * 8}vh`}} onClickCapture={(e) => props.onClickTask(e)}>\n      <div>\n        <h4>{props.task}</h4>\n        <p>{props.location}</p>\n        <p>{`${parseTimeString(props.start_time)}-${parseTimeString(props.end_time)}`}</p>\n      </div>\n    </li>\n  );\n}","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../GlobalContext\";\nimport { findConflictingTasks, generateTaskListItems, deleteConflictingTasks, addTaskToSchedule, wipeSelectedFields } from \"../helpers/helpers\";\nimport $ from 'jquery';\n\nexport default function DriverAvailability(props) {\n  const { state, setState } = useContext(GlobalContext); \n\n  // Generates array of conflicting tasks\n  const conflictingTasks = findConflictingTasks(state, props.tasks);\n  // Generates the listItems for each of the scheduled tasks for that day\n  const taskListItems = generateTaskListItems(props.tasks, conflictingTasks);\n  \n  const onBookDriver  = (e) => {\n    // Delete conflicting tasks if there are any\n    if (conflictingTasks.length !== 0) {\n      deleteConflictingTasks(setState, props.driver, state.checkAvailabilityTask.week, state.checkAvailabilityTask.day, conflictingTasks);\n    }\n    // Create new task\n    const newTask = {\n      start_time: state.checkAvailabilityTask.start_time,\n      end_time: state.checkAvailabilityTask.end_time,\n      task: state.checkAvailabilityTask.task,\n      location: state.checkAvailabilityTask.location\n    }\n    // Update state\n    const driver = props.driver;\n    const week = state.checkAvailabilityTask.week;\n    const day = state.checkAvailabilityTask.day;\n    const selectedTimeSlot = state.checkAvailabilityTask.start_time;\n    setState({...state, driver, week, day, selectedTimeSlot});\n    // add new task to state.schedule \n    addTaskToSchedule(newTask, state, setState);\n    wipeSelectedFields(state, setState);\n    // Update state\n    setState({...state, driver: props.driver, checkAvailabilityTask: null, week});\n    //  Toggle form close\n    $('#availabilityDetails').modal('hide');\n  }\n\n  return (\n    <li className=\"driver-details\">\n      <div>\n        <h1>{`Driver${props.driver}`}</h1>\n        { conflictingTasks.length === 0 ?\n          <h2 className=\"no-conflict-header\">No Conflicts</h2>\n          :\n          <h2 className=\"conflict-header\">{conflictingTasks.length} Conflict(s)</h2>\n        }\n        <h3>{`${Object.keys(props.tasks).length} tasks scheduled`}</h3>\n      </div>\n   \n      <ul className=\"driver-task-list\">\n        {taskListItems}\n      </ul>\n \n      <div>\n        { conflictingTasks.length > 0 &&\n          <p className=\"warning\">{`Warning! This action will cancel all conflicting tasks`}</p>\n        }\n        <button type=\"button\" onClick={onBookDriver} className=\"btn btn-secondary book-driver\">{`Book With Driver${props.driver}`}</button>\n      </div>\n    </li>\n  \n  )\n}","import React from \"react\";\nimport Task from \"../components/Task\";\nimport DriverAvailability from \"../components/DriverAvailability\";\n\nconst generateHourColumn = () => {\n  const column = [];\n  for (let i = 0; i <= 24; i++) {\n  column.push(<li key={i} className=\"hour-label\"><p>{parseTimeString(i)}</p></li>);\n  }\n  return column;\n}\n\nconst generateDaySchedule = (tasks, onClickTimeSlot, onClickTask) => {\n  const schedule = [];\n  for (let i = 0; i < 24; i++) {\n    if (tasks[i]) {\n      const {start_time, end_time, task, location} = tasks[i];\n      schedule.push(<Task onClickTask={onClickTask} start_time={start_time} end_time={end_time} task={task} location={location}/>);\n      i += end_time - start_time - 1;\n    } else {\n      schedule.push(<li key={i} className=\"time-slot\" data-time={i} data-toggle=\"modal\" data-target=\"#newTaskForm\" onClick={onClickTimeSlot}>+</li>);\n    }\n  }\n  schedule.push(<li key={25} className=\"time-slot buffer\" data-time={25}>+</li>)\n  return schedule;\n}\n\nconst fetchDayTasksForDriver = (schedule, week, day, driver) => {\n  let tasks;\n  if (schedule[`driver${driver}`][`Week${week}`]) {\n    tasks = schedule[`driver${driver}`][`Week${week}`][day] || {};\n  } else {\n    tasks = {};\n  }\n  return tasks;\n}\n\nconst parseTimeString = time => {\n  if (time === 12) return '12pm';\n  if (time === 0 || time % 12 === 0) return '12am';\n  return time > 12 ? `${time % 12}pm` : `${time}am`;\n}\n\nconst generateCompatibleEndTimeOptions= (state) => {\n  const todayTasks = fetchDayTasksForDriver(state.schedule, state.week, state.day, state.driver);\n  const options = [];\n  let possibleEndTime = state.selectedTask ? parseInt(state.selectedTask.end_time) : parseInt(state.selectedTimeSlot);\n\n  while (possibleEndTime < 24 && !todayTasks[possibleEndTime]) {\n    options.push(<option value={possibleEndTime + 1}>{parseTimeString(possibleEndTime + 1)}</option>);\n    possibleEndTime++;\n  }\n  return options;\n}\n\nconst generateCompatibleStartTimeOptions = (state) => {\n  const options = [];\n  const todayTasks = fetchDayTasksForDriver(state.schedule, state.week, state.day, state.driver);\n  let earlierTask = 0;\n  for (let i = state.selectedTimeSlot - 1; i >= 0; i--) {\n    if (todayTasks[i]) {\n      earlierTask = todayTasks[i].end_time;\n      break;\n    }\n  }\n  \n  while (earlierTask <= state.selectedTimeSlot - 1) {\n    options.push(<option value={earlierTask}>{parseTimeString(earlierTask)}</option>);\n    earlierTask ++;\n  }\n  return options;\n}\n\nconst generateAvailableTimeOptions = (state) => {\n  const options = [];\n  const todayTasks = fetchDayTasksForDriver(state.schedule, state.week, state.day, state.driver);\n\n  let earlierTask = 0;\n  for (let i = state.selectedTimeSlot - 1; i >= 0; i--) {\n    if (todayTasks[i]) {\n      earlierTask = todayTasks[i].end_time;\n      break;\n    }\n  }\n\n  let laterTask = 24\n  for (let i = parseInt(state.selectedTimeSlot) + 1; i < 24; i++) {\n    if (todayTasks[i]) {\n      laterTask = i;\n      break\n    }\n  }\n\n  while (earlierTask <= laterTask) {\n    options.push(<option value={earlierTask}>{parseTimeString(earlierTask)}</option>);\n    earlierTask ++;\n  }\n  return options;\n}\n\nconst addTaskToSchedule = (newTask, state, setState) => {\n  setState(state => {\n    if (state.schedule[`driver${state.driver}`][`Week${state.week}`]) {\n      if(state.schedule[`driver${state.driver}`][`Week${state.week}`][`${state.day}`]) {\n        state.schedule[`driver${state.driver}`][`Week${state.week}`][`${state.day}`][`${newTask.start_time}`] = newTask;\n      } else {\n        state.schedule[`driver${state.driver}`][`Week${state.week}`][`${state.day}`] = {\n          [`${newTask.start_time}`]: newTask\n        }\n      }\n    } else {\n      state.schedule[`driver${state.driver}`][`Week${state.week}`] = {\n        [`${state.day}`]: {\n          [`${newTask.start_time}`]: newTask\n        }\n      }\n    }\n    return state;\n  });\n};\n\nconst createNewTask = (endTime, task, state, location) => {\n  const newTask = {\n    start_time: state.selectedTimeSlot,\n    end_time: parseInt(endTime),\n    task,\n    location\n  };\n  return newTask;\n}\n\nconst wipeSelectedFields = (state, setState) => {\n  const day = null;\n  const selectedTimeSlot = null;\n  const selectedTask = null;\n  setState({...state, day, selectedTimeSlot, selectedTask});\n};\n\nconst fetchSelectedTask = (day, week, driver, selectedTimeSlot, state) => {\n  const task = state.schedule[`driver${driver}`][`Week${week}`][day][selectedTimeSlot];\n  return task;\n}\n\nconst deleteTask = (state, setState) => {\n  setState(state => {\n    delete state.schedule[`driver${state.driver}`][`Week${state.week}`][`${state.day}`][state.selectedTimeSlot];\n    return state;\n  })\n}\n\nconst getCurrentWeek = () => {\n  const now = new Date();\n  const oneJan = new Date(now.getFullYear(), 0, 1);\n  return Math.ceil((((now - oneJan) / 86400000) + oneJan.getDay()+1)/7);\n}\n\nconst generateWeekOptions = () => {\n  let options = [];\n  let i = getCurrentWeek();\n  for (i; i <= 52; i++) {\n  options.push(<option value={i}>{i}</option>)\n  }\n  return options;\n}\n\nconst generateDayOptions = () => {\n  return ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].map(day => <option value={day}>{day}</option>)\n}\n\nconst generateAllTimeOptions = () => {\n  const options = [];\n  for (let i = 0; i <= 24; i++) {\n    options.push(<option value={i}>{parseTimeString(i)}</option>)\n  }\n  return options;\n}\n\nconst generateDriverDetails = (state, driver) => {\n  let tasks = {};\n  if (state.checkAvailabilityTask) {\n    tasks = fetchDayTasksForDriver(state.schedule, state.checkAvailabilityTask.week, state.checkAvailabilityTask.day, driver);\n  }\n  return <DriverAvailability driver={driver} tasks={tasks} />\n}\n\nconst findConflictingTasks = (state, tasks) => {\n  const conflicts = [];\n  if(state.checkAvailabilityTask) {\n    const startTime = parseInt(state.checkAvailabilityTask.start_time);\n    const endTime = parseInt(state.checkAvailabilityTask.end_time);\n    for (const [time, task] of Object.entries(tasks)) {\n      if ((startTime === task.start_time) || (startTime < task.start_time && endTime > task.start_time) || (startTime > task.start_time && startTime < task.end_time)){\n        conflicts.push(time);\n      }\n    }\n  }\n  return conflicts;\n};\n\nconst generateTaskListItems = (tasks, conflictingTasks) => {\n  const listItems = [];\n  for (const task of Object.values(tasks)) {\n    listItems.push(<li className={conflictingTasks.includes(`${task.start_time}`) ? \"details-task conflict\" : \"details-task\"}>\n      <h1>{task.task}</h1>\n      <p>{task.location}</p>\n      <p>{`${parseTimeString(task.start_time)}-${parseTimeString(task.end_time)}`}</p>\n    </li>)\n  }\n  return listItems;\n}\n\nconst deleteConflictingTasks = (setState, driver, week, day, conflictingTasks) => {\n  setState(state => {\n    for (const taskTime of conflictingTasks) {\n      delete state.schedule[`driver${driver}`][`Week${week}`][`${day}`][taskTime];\n    }\n    return state;\n  })\n}\n\nconst validateForm = (startTime, endTime, location) => {\n  console.log({startTime, endTime, location})\n  if (!(startTime.toString)|| !(endTime.toString) || !location) {\n    return \"Please fill in all form fields\";\n  }\n  if (parseInt(endTime) <= parseInt(startTime)) {\n    return \"End time must be after start time\";\n  }\n}\n\n\nexport { generateDaySchedule, generateHourColumn, fetchDayTasksForDriver, generateCompatibleEndTimeOptions, parseTimeString, addTaskToSchedule, createNewTask, wipeSelectedFields, fetchSelectedTask, deleteTask, getCurrentWeek, generateCompatibleStartTimeOptions, generateWeekOptions, generateDayOptions, generateAllTimeOptions, generateDriverDetails, findConflictingTasks, generateTaskListItems, deleteConflictingTasks, validateForm, generateAvailableTimeOptions }","import React, { useContext } from 'react';\nimport { GlobalContext } from \"../GlobalContext\";\nimport { generateDaySchedule, fetchDayTasksForDriver, fetchSelectedTask } from \"../helpers/helpers\"\nimport $ from 'jquery';\n\n\nexport default function Day(props) {\n  const { state, setState } = useContext(GlobalContext);\n\n  const onClickTimeSlot = (e) => {\n    // Grab selected time slot\n    const selectedTimeSlot = parseInt(e.target.dataset.time);\n    // Set day && Set selected timeslot \n    setState({...state, day: props.day, selectedTimeSlot});\n  }\n\n  const onClickTask = (e) => {\n    let taskElem = e.target;\n    // catch event on LI\n    while(taskElem.nodeName !== 'LI') {\n      taskElem = $(taskElem).parent()[0];\n    }\n    // Grab data fields needed from clicked task\n    const selectedTimeSlot = taskElem.dataset.start;\n    const day = props.day;\n    // Update state with selected task details\n    const selectedTask = fetchSelectedTask(day, state.week, state.driver, selectedTimeSlot, state);\n    setState({...state, selectedTimeSlot, day, selectedTask});\n  }\n\n  // Fetches all the task for a specified driver on a specified week and day\n  const tasks = fetchDayTasksForDriver(state.schedule, state.week, props.day, state.driver);\n  // Generates the column for each day of the week\n  const daySchedule = generateDaySchedule(tasks, onClickTimeSlot, onClickTask);\n  \n  return (\n    <>\n    <li className=\"list-inline-item\">\n      <ul className=\"week-table\">\n        <li className=\"day-name\">{props.day}</li>\n        { daySchedule }\n      </ul>\n    </li>\n    </>\n  )\n}","import React from \"react\";\nimport Day from \"./Day\";\nimport { generateHourColumn } from \"../helpers/helpers\";\n\nexport default function Week(props) {\n\n  const weekDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].map(weekday => <Day day={weekday}/>)\n  const hourColumn = generateHourColumn();\n  return (\n    <div className=\"week\">\n      <ul className=\"list-inline\">\n        <li className=\"list-inline-item\">\n          <ul className=\"hour-column\">\n            {hourColumn}\n          </ul>\n        </li>\n        {weekDays}\n      </ul>\n    </div>\n  )\n}","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../GlobalContext\";\nimport { generateCompatibleEndTimeOptions, parseTimeString, addTaskToSchedule, wipeSelectedFields, createNewTask, validateForm } from \"../helpers/helpers\";\nimport $ from 'jquery';\n\nexport default function New() {\n  const { state, setState } = useContext(GlobalContext); \n  \n  const onFormSubmit = (e) => {\n    // Prevent default form submission\n    e.preventDefault();\n    // Extract values from form\n    const endTime = e.target['end-time'].value;\n    const task = e.target.task.value;\n    const location = e.target.location.value;\n    // Validate form inputs\n    const error = validateForm(state.selectedTimeSlot, endTime, location);\n    if (error) {\n      alert(error);\n      return;\n    }\n    // Create new task\n    const newTask = createNewTask(endTime, task, state, location);\n    // Add task to state.schedule\n    addTaskToSchedule(newTask, state, setState);\n    wipeSelectedFields(state, setState);\n    // Toggle form close\n    $('#newTaskForm').modal('hide');\n  }\n\n  // Generates array of options for non-conflicting end times \n  const options = generateCompatibleEndTimeOptions(state);\n\n  return (\n    <div className=\"modal fade\" id=\"newTaskForm\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">New Task</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <form className=\"form new-form\" onSubmit={onFormSubmit}>\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"driver\">Driver</span>\n                  </div>\n                  <input type=\"text\" className=\"form-control\"  value={state.driver}></input>\n                </div>\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"week\">Week</span>\n                  </div>\n                  <input type=\"text\" className=\"form-control\" value={state.week}></input>\n                </div>\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"day\">Day</span>\n                  </div>\n                  <input type=\"text\" className=\"form-control\" value={state.day}></input>\n                </div>\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"start-time\">Start Time</span>\n                  </div>\n                  <input type=\"text\" className=\"form-control\" value={parseTimeString(state.selectedTimeSlot)}></input>\n                </div>\n              \n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <label className=\"input-group-text\" for=\"end-time\">End Time</label>\n                  </div>\n                  <select className=\"custom-select form-control\" id=\"end-time\">\n                    {options}\n                  </select>\n                </div>\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <label className=\"input-group-text\" for=\"task\">Task</label>\n                  </div>\n                  <select className=\"custom-select form-control\" id=\"task\">\n                    <option selected>Pickup Goods</option>\n                    <option>Deliver Goods</option>\n                    <option>Other</option>\n                  </select>\n                </div>\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"location\">Location</span>\n                  </div>\n                  <input type=\"text\" className=\"form-control\" placeholder=\"enter city\" name=\"location\"></input>\n                </div>\n                <div className=\"new-buttons\">\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                  <button type=\"submit\" className=\"btn btn-secondary\">Save</button>\n                </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../GlobalContext\";\nimport { addTaskToSchedule, wipeSelectedFields, deleteTask, validateForm, generateAvailableTimeOptions } from \"../helpers/helpers\";\nimport $ from 'jquery';\n\nexport default function Edit() {\n  const { state, setState } = useContext(GlobalContext); \n\n  const onFormSubmit = (e) => {\n    // prevent default form submission\n    e.preventDefault();\n    // grab values from form\n    const endTime = e.target['end-time'].value;\n    const startTime = e.target['start-time'].value;\n    const task = e.target.task.value;\n    // Returns a string with an error if start time < end time or if fields are missing from the form\n    const error = validateForm(startTime, endTime, state.selectedTask.location);\n    if (error) {\n      alert(error);\n      return;\n    }\n    // Deletes task from state.schedule\n    deleteTask(state, setState);\n    // Create new task\n    const newTask = {\n      ...state.selectedTask, \n      end_time: endTime,\n      start_time: startTime,\n      task\n    }\n    // Select current time slot\n    setState({...state, time: startTime});\n    // Add new task\n    addTaskToSchedule(newTask, state, setState);\n    // Clears selected task, date, and time slot\n    wipeSelectedFields(state, setState);\n    // Toggle form close\n    $('#editTaskForm').modal('hide');\n  }\n\n  const onDelete = (e) => {\n    // Deletes task from state.schedule\n    deleteTask(state, setState);\n    // Update state \n    const day = null;\n    const selectedTimeSlot = null;\n    const selectedTask = null;\n    setState({...state, day, selectedTimeSlot, selectedTask});\n    // Toggle form close\n    $('#editTaskForm').modal('hide');\n  }\n\n  const onLocationChange = (e) => {\n    // controlled form input updates state onChange\n    const selectedTask = {\n      ...state.selectedTask, \n      location: e.target.value\n    };\n    setState({...state, selectedTask});\n  }\n\n  // Generates a list of earlier and later times from current start time that do not conlfict with any other existing tasks\n  const availableTimeOptions = generateAvailableTimeOptions(state);\n\n  return (\n    <div className=\"modal fade\" id=\"editTaskForm\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">Edit Task</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <form className=\"form edit-form\" onSubmit={onFormSubmit}>\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"driver\">Driver</span>\n                  </div>\n                  <input type=\"text\" className=\"form-control\"  value={state.driver}></input>\n                </div>\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"week\">Week</span>\n                  </div>\n                  <input type=\"text\" className=\"form-control\" value={state.week}></input>\n                </div>\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"day\">Day</span>\n                  </div>\n                  <input type=\"text\" className=\"form-control\" value={state.day}></input>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <label className=\"input-group-text\" for=\"start-time\">Start Time</label>\n                  </div>\n                  <select className=\"custom-select form-control\" id=\"start-time\">\n                    {availableTimeOptions}\n                  </select>\n                </div>\n              \n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <label className=\"input-group-text\" for=\"end-time\">End Time</label>\n                  </div>\n                  <select className=\"custom-select form-control\" id=\"end-time\">\n                    {availableTimeOptions}\n                  </select>\n                </div>\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <label className=\"input-group-text\" for=\"task\">Task</label>\n                  </div>\n                  <select className=\"custom-select form-control\" id=\"task\">\n                    <option selected>Pickup Goods</option>\n                    <option>Deliver Goods</option>\n                    <option>Other</option>\n                  </select>\n                </div>\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"location\">Location</span>\n                  </div>\n                  <input type=\"text\" className=\"form-control location-input\" placeholder=\"enter city\" name=\"location\" onChange={onLocationChange} value={state.selectedTask ? state.selectedTask.location : \"\"}></input>\n                </div>\n                <div className=\"edit-buttons\">\n                  <button type=\"button\" className=\"btn btn-danger\" onClick={onDelete}>Delete Task</button>\n                  <button type=\"submit\" className=\"btn btn-secondary\">Save Changes</button>\n                </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../GlobalContext\";\nimport { getCurrentWeek } from \"../helpers/helpers\";\nimport $ from 'jquery';\n\nexport default function Header() {\n  const { state, setState } = useContext(GlobalContext); \n  \n  // Skips to a given week\n  const onClickSkip = (e) => {\n    const week = parseInt(document.querySelector('.skip-input').value);\n    if (week && week >= 1 && week <= 52) {\n      setState({...state, week});\n    }\n    document.querySelector('.skip-input').value=\"\";\n  }\n\n  // Returns to current week\n  const onClickCurrent = (e) => {\n    const week = getCurrentWeek();\n    setState({...state, week});\n  }\n\n  // Toggles availability form open\n  const onClickAvailability = (e) => {\n    $('#availabilityForm').modal('show');\n  }\n  \n  return (\n    <header>\n      <ul className=\"header\">\n        <li onClick={onClickCurrent}><span>{`<< `}</span>{`Current week`}</li>\n        <li onClick={onClickAvailability}>Check Availability</li>\n        <li onClick={onClickSkip}>{`Skip to week `}<input className=\"skip-input\" type=\"text\"></input>{`>>`}</li>\n      </ul>\n    </header>\n  );\n}","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../GlobalContext\";\nimport { generateWeekOptions, generateDayOptions, generateAllTimeOptions, validateForm } from \"../helpers/helpers\";\nimport $ from 'jquery';\n\nexport default function AvailabilityForm() {\n  const { state, setState } = useContext(GlobalContext); \n\n  // Generate dowpdown options for form\n  const weekOptions = generateWeekOptions();\n  const dayOptions = generateDayOptions();\n  const allTimeOptions = generateAllTimeOptions();\n\n  const onCheckAvailability = (e) => {\n    // Prevent default form submission\n    e.preventDefault();\n    // Extract values from form\n    const week = e.target['week'].value;\n    const day = e.target['day'].value;\n    const startTime = e.target['start-time'].value;\n    const endTime = e.target['end-time'].value;\n    const task = e.target['task'].value;\n    const location = e.target['location'].value;\n\n    // Validate form. If missing fields or startTime >= endTime, validateForm returns an error string\n    const error = validateForm(startTime, endTime, location);\n    if (error) {\n      alert(error);\n      return;\n    }\n\n    // Store tentative task details in state\n    const checkAvailabilityTask = {\n      week,\n      day,\n      start_time: startTime,\n      end_time: endTime,\n      task,\n      location\n    };\n    setState({...state, checkAvailabilityTask});\n\n    // Toggle this form close\n    $('#availabilityForm').modal('hide');\n    // Toggle availabilityDetails open\n    $('#availabilityDetails').modal('show');\n  }\n\n  return (\n    <div className=\"modal fade\" id=\"availabilityForm\" tabindex=\"-1\">\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">Check Availability</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <form className=\"form availability-form\" onSubmit={onCheckAvailability}>\n                \n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"week\">Week</span>\n                  </div>\n                  <select className=\"custom-select form-control\" id=\"week\">\n                    {weekOptions}\n                  </select>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"day\">Day</span>\n                  </div>\n                  <select className=\"custom-select form-control\" id=\"day\">\n                    {dayOptions}\n                  </select>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <label className=\"input-group-text\" for=\"start-time\">Start Time</label>\n                  </div>\n                  <select className=\"custom-select form-control\" id=\"start-time\">\n                    {allTimeOptions}\n                  </select>\n                </div>\n              \n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <label className=\"input-group-text\" for=\"end-time\">End Time</label>\n                  </div>\n                  <select className=\"custom-select form-control\" id=\"end-time\">\n                    {allTimeOptions.slice(1)}\n                  </select>\n                </div>\n\n\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <label className=\"input-group-text\" for=\"task\">Task</label>\n                  </div>\n                  <select className=\"custom-select form-control\" id=\"task\">\n                    <option selected>Pickup Goods</option>\n                    <option>Deliver Goods</option>\n                    <option>Other</option>\n                  </select>\n                </div>\n\n\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"location\">Location</span>\n                  </div>\n                  <input type=\"text\" className=\"form-control location-input\" placeholder=\"enter city\" name=\"location\"/>\n                </div>\n\n                <div className=\"availability-buttons\">\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                  <button type=\"submit\" className=\"btn btn-secondary\">Check Availability</button>\n                </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../GlobalContext\";\nimport { generateDriverDetails } from \"../helpers/helpers\";\n\nexport default function AvailabilityDetails() {\n  const { state } = useContext(GlobalContext); \n\n  const driverDetails = [1, 2, 3].map(driver => generateDriverDetails(state, driver));\n  \n  return (\n    <div className=\"modal fade\" id=\"availabilityDetails\" tabindex=\"-1\">\n      <div className=\"modal-dialog modal-lg\" role=\"document\">\n        <div className=\"modal-content availability-modal\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">Availability Details</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <ul className=\"driver-details-ul\">\n              {driverDetails}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport './App.css';\nimport Nav from './components/Nav';\nimport Week from './components/Week';\nimport New from './components/New';\nimport Edit from './components/Edit';\nimport Header from './components/Header';\nimport AvailabilityForm from './components/AvailabilityForm';\nimport AvailabilityDetails from './components/AvailabilityDetails';\nimport { GlobalContext } from \"../src/GlobalContext\";\nimport { getCurrentWeek } from \"./helpers/helpers\";\n\nfunction App() {\n  const week = getCurrentWeek();\n  const [state, setState] = useState({\n    day: null,\n    driver: 1,\n    selectedTimeSlot: null,\n    selectedTask: null,\n    checkAvailabilityTask: null,\n    week: week,\n    schedule: {\n      driver1: {\n        [`Week${week}`]: {\n          Monday: {\n            1: {\n              start_time: 1,\n              end_time: 3,\n              task: \"Pickup Goods\",\n              location: \"Toronto\"\n            }\n          },\n          Tuesday: {\n            9: {\n              start_time: 9,\n              end_time: 11,\n              task: \"Deliver Goods\",\n              location: \"Ottawa\"\n            }\n          },\n          Wednesday: {\n            18: {\n              start_time: 18,\n              end_time: 20,\n              task: \"Other\",\n              location: \"Montreal\"\n            }\n          }\n        }\n      },\n      driver2: {},\n      driver3: {}\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <GlobalContext.Provider value={{state, setState}}>\n        <Nav/>\n        <Header/>\n        <Week/>\n        <New/>\n        <Edit/>\n        <AvailabilityForm />\n        <AvailabilityDetails />\n      </GlobalContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport $ from 'jquery';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}